#!/bin/bash

export appDir="/bin/gitmr"
export srcDir="${appDir}/src"
export utilsDir="${appDir}/utils"

isDockerContainer=$(awk -F/ '$2 == "docker" {print "true"; exit 0}' /proc/1/cgroup )

if [[ "${isDockerContainer}" == "true" ]]; then
  export configDir="/config"
  else
    export configDir="${appDir}/conf"
fi

getProjectVcs() {
    # $1: project-alias
    while read line; do
        if [[ $line =~ $1_vcs=.* ]]; then
            echo ${line##*=}
            break;
        fi
    done < "${configDir}/git.projects"
}

params=()

for arg in "$@"; do
    params+=("$arg")
done

mode="default"
sourceBranch=""
targetBranch=""
assignee_user=""
labels=""
vcs=""
mr_title=""
projectAlias=""

for i in "${!params[@]}"; do
    case "${params[$i]}" in
        -i)
        mode="interactive"
        ;;
        -s)
        sourceBranch="${params[$i+1]}"
        ;;
        -t)
        targetBranch="${params[$i+1]}"
        ;;
        -a)
        assignee_user="${params[$i+1]}"
        ;;
        -l)
        labels="$labels${params[$i+1]}"
        ;;
        -m)
        mr_title="$mr_title${params[$i+1]}"
        ;;
        --wip)
        mr_title="WIP:$mr_title"
        ;;
        --in)
        vcs=$(getProjectVcs ${params[$i+1]})
        projectAlias="${params[$i+1]}"
        ;;
        --config)
        sh ${srcDir}/git-mr-config.sh "${configDir}"
        exit 0
        ;;
        --config-alias)
        sh ${srcDir}/git-projects-manager.sh --new "${params[$i+1]}"
    esac
done

if [[ "${mode}" == "interactive" ]];then
    read -p "> [project alias] : " projectAlias
    read -p "> [Source branch] : " sourceBranch
    read -p "> [Target branch] : " targetBranch
    read -p "> [ASSIGN TO (username)] : " assignee_user
    read -p "> [Title] : " mr_title
    read -p "> [LABELS (separator=,)] : " labels
fi

if [[ -z "${targetBranch}" ]]; then
    echo "ðŸš¨ Error! Target branch not found! ðŸš¨"
    exit 1;
fi

if [[ -z "${vcs}" ]];then
    echo "ðŸš¨ Error! Version Control System not found! ðŸš¨"
    exit 1; 
fi

if [[ "${vcs}" == "Gitlab" ]]; then
    sh ${srcDir}/git-lmr "${sourceBranch}" "${targetBranch}" "${assignee_user}" "${mr_title}" "${labels}" "${projectAlias}" 
    elif [[ "${vcs}" == "Github" ]]; then
        # do call github mr method
        echo "github ${confDir}/github.conf"
fi