#!/bin/bash 

params=()

for arg in "$@"; do
    params+=("$arg")
done

mode="default"
sourceBranch=""
targetBranch=""
assignee_user=""
labels=""
vcs=""
mr_title=""

isDockerContainer=$(awk -F/ '$2 == "docker" {print "true"; exit 0}' /proc/1/cgroup )

if [[ "${isDockerContainer}" == "true" ]]; then
  configDir=/tmp
  else
    configDir=/bin/GitMR
fi

for i in "${!params[@]}"; do

    case "${params[$i]}" in
        -i)
        mode="interactive"
        ;;
        -s)
        sourceBranch="${params[$i+1]}"
        ;;
        -t)
        targetBranch="${params[$i+1]}"
        ;;
        -a)
        assignee_user="${params[$i+1]}"
        ;;
        -l)
        labels="$labels${params[$i+1]}"
        ;;
        -m)
        mr_title="$mr_title${params[$i+1]}"
        ;;
        --wip)
        mr_title="wip:$mr_title"
        ;;
        --lab)
        vcs="gitlab"
        ;;
        --hub)
        vcs="github"
        ;;
        --config)
        sh /bin/GitMR/git-mr-config.sh "${configDir}"
        exit 0
        ;;
    esac
done

if [[ "${mode}" == "interactive" ]];then
    read -p "> [Source branch] : " sourceBranch
    read -p "> [Target branch] : " targetBranch
    read -p "> [ASSIGN TO (username)] : " assignee_user
    read -p "> [Title] : " mr_title
    read -p "> [LABELS (separator=,)] : " labels
fi

if [[ -z "${targetBranch}" ]]; then
    echo "Error! Target branch not found."
    exit 1;
fi

if [[ -z "${vcs}" ]];then
    echo "Error! Version Control System not found."
    exit 1; 
fi

if [[ "${vcs}" == "gitlab" ]]; then
    git lmr "${sourceBranch}" "${targetBranch}" "${assignee_user}" "${mr_title}" "${labels}" "${configDir}/gitlab.conf"
    elif [[ "${vcs}" == "github" ]]; then
        # do call github mr method
        echo "github ${confDir}/github.conf"
fi
